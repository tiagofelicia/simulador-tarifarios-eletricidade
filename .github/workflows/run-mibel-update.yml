name: Atualizar Dados MIBEL

on:
  schedule:
    - cron: '5 11 * * 1-5'
    - cron: '55 17 * * 1-5'
    - cron: '5 11 * * 6,0'
  workflow_dispatch:

jobs:
  run-mibel-job:
    name: Executar AtualizaÃ§Ã£o MIBEL
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout do repositÃ³rio
        uses: actions/checkout@v4

      - name: Configurar R
        # Adicionamos um 'id' para que o passo de cache possa referenciar a versÃ£o do R
        id: setup-r
        uses: r-lib/actions/setup-r@v2.4.0
        with:
          r-version: '4.4.1'

      # =================================================================
      # PASSO NOVO: Guardar e restaurar os pacotes R instalados
      # =================================================================
      - name: Cache dos pacotes R
        uses: actions/cache@v4
        with:
          # O caminho para a pasta onde os pacotes R sÃ£o instalados
          path: ${{ env.R_LIBS_USER }}
          # Uma chave Ãºnica para identificar o cache. Se o script R mudar, o cache Ã© invalidado.
          key: ${{ runner.os }}-r-${{ steps.setup-r.outputs.r-version }}-${{ hashFiles('scripts/atualizacao_eletricidade_MIBEL.r') }}
          restore-keys: |
            ${{ runner.os }}-r-${{ steps.setup-r.outputs.r-version }}-

      - name: Instalar pacotes R
        # Este passo agora sÃ³ instala pacotes se nÃ£o existirem no cache
        run: |
          install.packages(c('dplyr', 'stringr', 'lubridate', 'httr', 'rvest', 'tidyr', 'purrr', 'readxl', 'openxlsx', 'readr'))
        shell: Rscript {0}

      - name: Executar script de atualizaÃ§Ã£o com logging
        run: |
          mkdir -p logs
          start_time=$(date +%s)
          echo "=== ExecuÃ§Ã£o iniciada em $(date -d @$start_time '+%Y-%m-%d %H:%M:%S') ===" >> logs/atualizacao_eletricidade_MIBEL.log
          
          Rscript scripts/atualizacao_eletricidade_MIBEL.r >> logs/atualizacao_eletricidade_MIBEL.log 2>&1
          
          end_time=$(date +%s)
          echo "=== ExecuÃ§Ã£o terminada em $(date -d @$end_time '+%Y-%m-%d %H:%M:%S') ===" >> logs/atualizacao_eletricidade_MIBEL.log
          runtime=$((end_time-start_time))
          echo "DuraÃ§Ã£o total: ${runtime} segundos." >> logs/atualizacao_eletricidade_MIBEL.log
          echo "" >> logs/atualizacao_eletricidade_MIBEL.log

      - name: Fazer upload do log como artefacto
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log_atualizacao_eletricidade_MIBEL
          path: logs/atualizacao_eletricidade_MIBEL.log

      - name: Verificar se houve alteraÃ§Ãµes
        id: git-check
        run: |
          git add -A
          if git diff --cached --quiet;
          then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit e push se houver alteraÃ§Ãµes
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "ðŸ“Š Dados MIBEL atualizados automaticamente"
          git push
